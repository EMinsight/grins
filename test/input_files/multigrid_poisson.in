# Input file for basic forced poisson multigrid example

# Mesh related options
[Mesh]
  class = 'parallel'
  [./Generation]
    dimension = '2'
    element_type='QUAD4'
    n_elems_x = '10'
    n_elems_y = '10'
    x_min = '0.0'
    x_max = '1.0'
    y_min = '-1.0'
    y_max = '0.0'
  [../]
  [./Refinement]
     uniformly_refine = '2'
     allow_renumbering = 'false'
     allow_remote_elem_deletion = 'false'
     disable_partitioning = 'true'
  [../]
[]


# We use Heatconduction physics as this is a basic diffusive model
[Physics]
  enabled_physics = 'HeatConduction ParsedSourceTerm'
  [./HeatConduction]
    material = 'TestMaterial'
  [../]
  [./ParsedSourceTerm]
    [./Function]
      value = '2*pi*pi*sin(pi*x)*sin(pi*y)'
    [../]
  [./Variables]
    names = 'Temp'
    FE_types = 'LAGRANGE'
    FE_orders = 'FIRST'
  [../]
[../]
[]

[Variables]
  [./Temperature]
    names = 'Temp'
    fe_family = 'LAGRANGE'
    order = 'FIRST'
  [../]
[]

[Materials]
  [./TestMaterial]
    [./ThermalConductivity]
      model = 'constant'
      value = '1.0'
    [../]
    [./Density]
      value = '1.0'
    [../]
    [./SpecificHeat]
      model = 'constant'
      value = '1.0'
    [../]
  [../]
[]

[BoundaryConditions]
  bc_ids = '0:1:2:3'
  bc_id_name_map = 'Walls'
  [./Walls]
    [./Temperature]
      type = 'parsed_dirichlet'
      Temp = '0'
    [../]
  [../]
[]

#Linear and nonlinear solver options
[linear-nonlinear-solver]
  max_nonlinear_iterations =  1
  max_linear_iterations = 15
  verify_analytic_jacobians = 0.0
  #initial_linear_tolerance = 1.0e-10
  use_numerical_jacobians_only = 'false'
  type = 'libmesh_petsc_diff'
[]

# Visualization options
[vis-options]
  vis_output_file_prefix = 'multigrid_poisson'
  output_vis = true
  output_residual = 'false'
  output_format = 'xda.gz'
[]

[screen-options]
  system_name = 'GRINS-TEST'
  print_equation_system_info = true
  print_mesh_info = true
  print_log_info = true
  solver_verbose = false
  solver_quiet = false
  print_element_jacobians = 'false'
[]
